def scalaVersionMajor ='2.12'
def scalaVersionMinor ='2.12.8'
def akkaVersion = '2.6.5'
def akkaJdbcPersistenceJournalVersion = '3.5.3'
def h2DatabaseLibraryVersion = '1.4.200'
def slickVersion = '3.3.2'
def akkaSprayJsonVersion = '10.1.12'
def monovoreDeclineVersion = '1.0.0'
def logbackVersion = '1.2.3'

// -------- DEPENDENCIES --------
// Sample dependencies
// def playJsonDep = "com.typesafe.play:play-json_$scalaVersion:2.6.9".toString()
// def jodaDep = 'org.joda:joda-convert:2.1'
// ------------------------------

// for scalaTest
buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.26"
    }
}

// define common properties/behaviour
//  (assume all sub projects are scala)
subprojects {
    apply plugin: 'scala'
    apply plugin: 'application'
    apply plugin: "com.github.maiflai.scalatest" // for scalaTest

    group 'file-ingest-service-poc'
    version '0.1'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile "org.scala-lang:scala-library:$scalaVersionMinor".toString()
        // compile 'log4j:log4j:1.2.17'

        testCompile "org.scalatest:scalatest_$scalaVersionMajor:3.1.1".toString()
    }

    // copy dependencies to build/dependencies
    task copyDeps(type: Copy) {
        from configurations.runtime
        into 'build/dependencies'
    }

    // run copyDeps before jar...
    jar.dependsOn copyDeps
}

project(':cluster-node') {
    dependencies {
        compile project(':message-protocol')
        compile group: 'com.typesafe.akka', name: "akka-persistence-typed_${scalaVersionMajor}", version: akkaVersion
        compile group: 'com.typesafe.akka', name: "akka-persistence-query_${scalaVersionMajor}", version: akkaVersion
        compile group: 'com.typesafe.akka', name: "akka-cluster-typed_${scalaVersionMajor}", version: akkaVersion
        compile group: 'com.typesafe.akka', name: "akka-cluster-sharding-typed_${scalaVersionMajor}", version: akkaVersion

        // Akka Persistence Journal & Persistence Query JDBC plugin, plus Jackson JSON serialization
        compile group: 'com.github.dnvriend', name: "akka-persistence-jdbc_${scalaVersionMajor}", version: akkaJdbcPersistenceJournalVersion
        compile group: 'com.typesafe.akka', name: "akka-serialization-jackson_${scalaVersionMajor}", version: akkaVersion

        // H2 JDBC driver used in integration and CLI smoke tests
        compile group: 'com.h2database', name: 'h2', version: h2DatabaseLibraryVersion
        compile group: 'com.typesafe.slick', name: "slick_${scalaVersionMajor}", version: slickVersion

        // Akka HTTP and associated JSON marshalling
        compile group: 'com.typesafe.akka', name: "akka-http_${scalaVersionMajor}", version: akkaVersion
        compile group: 'com.typesafe.akka', name: "akka-http-spray-json_${scalaVersionMajor}", version: akkaSprayJsonVersion

        // Command-line options parsing
        compile group: 'com.monovore', name: "decline_${scalaVersionMajor}", version: monovoreDeclineVersion

        // Logging using logback
        compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    }

    jar {
        manifest {
            attributes 'Main-Class': 'bmaso.file_ingest_service_poc.cluster_node.MainCLI'
        }
    }

    // Run the normal "run" task using a specific set of command-line args
    task runNode {
        description '''
\tSpawns an instance of the server node in the local cluster. Options:
\t* Use "http-port" project property to set HTTP listen port; default 8051.
\t  E.g., "./gradlew runNode -Phttp-port=123 ..."
\t* Use "cluster-port" project property to set intra-cluster unique port for this node; default 2551.
\t  Note the first node must use port 2551. E.g., "./gradlew runNode -Pcluster-port=123 ..."
\t* Use "host-h2-database-server" set to true to make the node 
'''

        int http_port = project.properties.containsKey('http-port') ? (project.properties['http-port'] as int) : 8051
        int cluster_port = project.properties.containsKey('cluster-port') ? (project.properties['cluster-port'] as int) : 2551

        String mainClassName = 'bmaso.file_ingest_service_poc.cluster_node.MainCLI'
        List<String> argsArr = ["--http-port=$http_port", "--cluster-port=$cluster_port"]

        if(project.hasProperty("host-h2-database-server")) {
            argsArr += "--host-h2-database-server"
        }

        if(project.hasProperty("create-h2-database")) {
            argsArr += "--create-h2-database"
        }

        runNode.finalizedBy(run)

        doLast {
            print("Args: $argsArr")

            run.main = mainClassName
            run.args = argsArr
        }
    }
}
